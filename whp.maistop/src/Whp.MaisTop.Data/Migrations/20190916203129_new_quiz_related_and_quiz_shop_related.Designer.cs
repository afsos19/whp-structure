// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Whp.MaisTop.Data.Context;

namespace Whp.MaisTop.Data.Migrations
{
    [DbContext(typeof(WhpDbContext))]
    [Migration("20190916203129_new_quiz_related_and_quiz_shop_related")]
    partial class new_quiz_related_and_quiz_shop_related
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.AnswerQuiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<decimal>("Punctuation")
                        .HasColumnName("PONTUACAO");

                    b.Property<int?>("QuestionQuizId")
                        .HasColumnName("ID_QUESTIONARIO_PERGUNTA");

                    b.HasKey("Id");

                    b.HasIndex("QuestionQuizId");

                    b.ToTable("QUESTIONARIO_RESPOSTA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.AnswerUserQuiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerDescription")
                        .HasColumnName("RESPOSTA_DESCRITIVA");

                    b.Property<int?>("AnswerQuizId")
                        .HasColumnName("ID_QUESTIONARIO_RESPOSTA");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("AnswerQuizId");

                    b.HasIndex("UserId");

                    b.ToTable("QUESTIONARIO_USUARIO_RESPOSTA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("Ordernation")
                        .HasColumnName("ORDENACAO");

                    b.Property<string>("Photo")
                        .HasColumnName("FOTO");

                    b.Property<string>("SubTitle")
                        .HasColumnName("SUBTITULO");

                    b.Property<string>("Thumb")
                        .HasColumnName("FOTO_THUMB");

                    b.Property<string>("Title")
                        .HasColumnName("TITULO");

                    b.HasKey("Id");

                    b.ToTable("CAMPANHAS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.CampaignRelated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignId")
                        .HasColumnName("ID_CAMPANHA");

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int?>("OfficeId")
                        .HasColumnName("ID_CARGO");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("OfficeId");

                    b.ToTable("CAMPANHAS_RELACIONADA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.CampaignShopRelated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignRelatedId")
                        .HasColumnName("ID_CAMPANHA_RELACIONADA");

                    b.Property<int?>("ShopId")
                        .HasColumnName("ID_LOJA");

                    b.HasKey("Id");

                    b.HasIndex("CampaignRelatedId");

                    b.HasIndex("ShopId");

                    b.ToTable("CAMPANHAS_LOJAS_RELACIONADA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.CategoryProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("CATEGORIA_PRODUTO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.ExpiredConfigurationPoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVADO");

                    b.Property<DateTime>("ExpiresIn")
                        .HasColumnName("EXPIRA_EM");

                    b.HasKey("Id");

                    b.ToTable("CONFIGURACAO_PONTOS_EXPIRADO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.FileStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("STATUS_ARQUIVO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.FocusProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int>("CurrentMonth")
                        .HasColumnName("MES_VIGENTE");

                    b.Property<int>("CurrentYear")
                        .HasColumnName("ANO_VIGENTE");

                    b.Property<int?>("GroupProductId")
                        .HasColumnName("ID_PRODUTO_GRUPO");

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int?>("ProductId")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<decimal>("Punctuation")
                        .HasColumnName("PONTUACAO");

                    b.HasKey("Id");

                    b.HasIndex("GroupProductId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("ProductId");

                    b.ToTable("PRODUTO_SUPERTOP");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.GroupProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("PRODUTO_GRUPO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.HierarchyFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int>("CurrentMonth")
                        .HasColumnName("MES_VIGENTE");

                    b.Property<int>("CurrentYear")
                        .HasColumnName("ANO_VIGENTE");

                    b.Property<string>("FileName")
                        .HasColumnName("NOME_ARQUIVO");

                    b.Property<int?>("FileStatusId")
                        .HasColumnName("ID_STATUS_ARQUIVO");

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("FileStatusId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("UserId");

                    b.ToTable("ARQUIVO_HIERARQUIA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.HierarchyFileData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Cpf")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int?>("HierarchyFileId")
                        .HasColumnName("ID_ARQUIVO_HIERARQUIA");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.Property<string>("Off")
                        .HasColumnName("DESLIGADO");

                    b.Property<string>("Office")
                        .HasColumnName("CARGO");

                    b.Property<string>("Resale")
                        .HasColumnName("REVENDA");

                    b.Property<string>("ShopCode")
                        .HasColumnName("CODIGO_LOJA");

                    b.Property<string>("Spreedsheet")
                        .HasColumnName("PLANILHA");

                    b.HasKey("Id");

                    b.HasIndex("HierarchyFileId");

                    b.ToTable("ARQUIVO_HIERARQUIA_DADOS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.HierarchyFileDataError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("HierarchyFileId")
                        .HasColumnName("ID_ARQUIVO_HIERARQUIA");

                    b.Property<int>("Line")
                        .HasColumnName("LINHA");

                    b.Property<string>("Spreedsheet")
                        .HasColumnName("PLANILHA");

                    b.HasKey("Id");

                    b.HasIndex("HierarchyFileId");

                    b.ToTable("ARQUIVO_HIERARQUIA_DADOS_ERRO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.LogsPunctuation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ANO_VIGENTE")
                        .HasColumnName("ANO_VIGENTE");

                    b.Property<DateTime?>("CRIADO_EM")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("DESCRICAO")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("ID_ENTIDADE_REFERENTE")
                        .HasColumnName("ID_ENTIDADE_REFERENTE");

                    b.Property<int?>("ID_ORIGEM_PONTUACAO")
                        .HasColumnName("ID_ORIGEM_PONTUACAO");

                    b.Property<int?>("ID_USUARIO")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int?>("MES_VIGENTE")
                        .HasColumnName("MES_VIGENTE");

                    b.Property<string>("OPERACAO")
                        .HasColumnName("OPERACAO");

                    b.Property<decimal?>("PONTUACAO")
                        .HasColumnName("PONTUACAO");

                    b.Property<string>("TIPO_OPERACAO")
                        .HasColumnName("TIPO_OPERACAO");

                    b.Property<string>("USUARIO_BANCO")
                        .HasColumnName("USUARIO_BANCO");

                    b.HasKey("Id");

                    b.ToTable("PONTUACAO_USUARIO_LOGALTERACAO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Network", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.Property<int?>("RegionalId")
                        .HasColumnName("ID_REGIONAL");

                    b.Property<string>("SiteImage")
                        .HasColumnName("SITE_IMAGEM");

                    b.Property<string>("SiteName")
                        .HasColumnName("SITE_NOME");

                    b.Property<string>("SiteShortName")
                        .HasColumnName("SITE_NOME_CURTO");

                    b.HasKey("Id");

                    b.HasIndex("RegionalId");

                    b.ToTable("REDE");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("Ordernation")
                        .HasColumnName("ORDENACAO");

                    b.Property<string>("Photo")
                        .HasColumnName("FOTO");

                    b.Property<string>("SubTitle")
                        .HasColumnName("SUBTITULO");

                    b.Property<string>("Thumb")
                        .HasColumnName("FOTO_THUMB");

                    b.Property<string>("Title")
                        .HasColumnName("TITULO");

                    b.HasKey("Id");

                    b.ToTable("NOVIDADES");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.NewsRelated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int?>("NewsId")
                        .HasColumnName("ID_NOVIDADE");

                    b.Property<int?>("OfficeId")
                        .HasColumnName("ID_CARGO");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.HasIndex("NewsId");

                    b.HasIndex("OfficeId");

                    b.ToTable("NOVIDADES_RELACIONADA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Occurrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("BrazilCTCall")
                        .HasColumnName("BRASILCT_CHAMADO");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnName("FECHADO_EM");

                    b.Property<string>("Code")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<bool>("Critical")
                        .HasColumnName("CRITICO");

                    b.Property<string>("File")
                        .HasColumnName("ARQUIVO");

                    b.Property<string>("LastIteration")
                        .HasColumnName("ULTIMA_ITERACAO");

                    b.Property<int?>("OccurrenceContactTypeId")
                        .HasColumnName("ID_SAC_TIPO_CONTATO");

                    b.Property<int?>("OccurrenceStatusId")
                        .HasColumnName("ID_SAC_STATUS");

                    b.Property<int?>("OccurrenceSubjectId")
                        .HasColumnName("ID_SAC_ASSUNTO");

                    b.Property<DateTime?>("RedirectedAt")
                        .HasColumnName("REDIRECIONADO_EM");

                    b.Property<DateTime?>("ReturnedAt")
                        .HasColumnName("RETORNADO_EM");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("OccurrenceContactTypeId");

                    b.HasIndex("OccurrenceStatusId");

                    b.HasIndex("OccurrenceSubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("SAC");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OccurrenceContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("SAC_TIPO_CONTATO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OccurrenceMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<bool>("Catalog")
                        .HasColumnName("MENSAGEM_CATALOGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("File")
                        .HasColumnName("ARQUIVO");

                    b.Property<bool>("Internal")
                        .HasColumnName("MENSAGEM_INTERNA");

                    b.Property<string>("Message")
                        .HasColumnName("MENSAGEM");

                    b.Property<int?>("OccurrenceId")
                        .HasColumnName("ID_SAC");

                    b.Property<int?>("OccurrenceMessageTypeId")
                        .HasColumnName("ID_SAC_TIPO_MENSAGEM");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("OccurrenceId");

                    b.HasIndex("OccurrenceMessageTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("SAC_MENSAGEM");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OccurrenceMessageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("SAC_TIPO_MENSAGEM");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OccurrenceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("SAC_STATUS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OccurrenceSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("SAC_ASSUNTO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("CARGO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnName("TOKEN_ACESSO");

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("AuthorizationCode")
                        .HasColumnName("CODIGO_AUTORIZACAO");

                    b.Property<decimal>("ConversionRate")
                        .HasColumnName("TAXA_CONVERSAO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<long>("ExternalOrderId")
                        .HasColumnName("ID_PEDIDO_EXTERNO");

                    b.Property<DateTime?>("ForecastDate")
                        .HasColumnName("DATA_PREVISAO");

                    b.Property<decimal>("Freight")
                        .HasColumnName("FRETE");

                    b.Property<string>("Login")
                        .HasColumnName("LOGIN");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnName("ID_PEDIDO_STATUS");

                    b.Property<decimal>("OrderValue")
                        .HasColumnName("VALOR_PEDIDO");

                    b.Property<DateTime?>("ReversedAt")
                        .HasColumnName("ESTORNADO_EM");

                    b.Property<decimal>("Total")
                        .HasColumnName("TOTAL_PEDIDO");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("PEDIDO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderCancel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnName("TOKEN_ACESSO");

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("AuthorizationCode")
                        .HasColumnName("CODIGO_AUTORIZACAO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<long>("ExternalOrderId")
                        .HasColumnName("ID_PEDIDO_EXTERNO");

                    b.Property<string>("Login")
                        .HasColumnName("LOGIN");

                    b.HasKey("Id");

                    b.ToTable("PEDIDO_CANCELAMENTO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderConfirm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnName("TOKEN_ACESSO");

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("AuthorizationCode")
                        .HasColumnName("CODIGO_AUTORIZACAO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<long>("ExternalOrderId")
                        .HasColumnName("ID_PEDIDO_EXTERNO");

                    b.Property<string>("Login")
                        .HasColumnName("LOGIN");

                    b.Property<int?>("OrderId")
                        .HasColumnName("ID_PEDIDO");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("PEDIDO_CONFIRMACAO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<int>("Ammout")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("Category")
                        .HasColumnName("CATEGORIA");

                    b.Property<int>("CodeItem")
                        .HasColumnName("CODIGO_ITEM");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Department")
                        .HasColumnName("DEPARTAMENTO");

                    b.Property<long>("ExternalOrderId")
                        .HasColumnName("ID_PEDIDO_EXTERNO");

                    b.Property<DateTime>("ForecastDate")
                        .HasColumnName("DATA_PREVISAO");

                    b.Property<int?>("OrderId")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<string>("Partner")
                        .HasColumnName("PARCEIRO");

                    b.Property<string>("ProductName")
                        .HasColumnName("NOME_PRODUTO");

                    b.Property<decimal>("TotalValue")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal>("UnitValue")
                        .HasColumnName("VALOR_UNITARIO");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("PEDIDO_ITEM");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderReversal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnName("TOKEN_ACESSO");

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("AuthorizationCode")
                        .HasColumnName("CODIGO_AUTORIZACAO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<long>("ExternalOrderId")
                        .HasColumnName("ID_PEDIDO_EXTERNO");

                    b.Property<string>("Login")
                        .HasColumnName("LOGIN");

                    b.Property<string>("Message")
                        .HasColumnName("MENSAGEM");

                    b.Property<int?>("OrderId")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<decimal>("Value")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("PEDIDO_EXTORNO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderReversalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ammout")
                        .HasColumnName("QUANTIDADE");

                    b.Property<int>("CodeItem")
                        .HasColumnName("ITEM_CODIGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<long>("ExternalOrderId")
                        .HasColumnName("ID_PEDIDO_EXTERNO");

                    b.Property<int?>("OrderItemId")
                        .HasColumnName("ID_PEDIDO_ITEM");

                    b.Property<string>("Reason")
                        .HasColumnName("MOTIVO");

                    b.Property<decimal>("TotalValue")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal>("UnitValue")
                        .HasColumnName("VALOR_UNITARIO");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.ToTable("PEDIDO_EXTORNO_ITEM");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Method")
                        .HasColumnName("METODO");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("PEDIDO_STATUS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.ParticipantProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int>("CurrentMonth")
                        .HasColumnName("MES_VIGENTE");

                    b.Property<int>("CurrentYear")
                        .HasColumnName("ANO_VIGENTE");

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int?>("ProductId")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<decimal>("Punctuation")
                        .HasColumnName("PONTUACAO");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.HasIndex("ProductId");

                    b.ToTable("PRODUTO_PARTICIPANTE");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Phraseology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Answer")
                        .HasColumnName("RESPOSTA");

                    b.Property<int?>("PhraseologyTypeSubjectId")
                        .HasColumnName("ID_TIPO_ASSUNTO_FRASEOLOGIA");

                    b.HasKey("Id");

                    b.HasIndex("PhraseologyTypeSubjectId");

                    b.ToTable("FRASEOLOGIA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.PhraseologyCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("FRASEOLOGIA_CATEGORIA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.PhraseologySubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("PhraseologyCategoryId")
                        .HasColumnName("ID_CATEGORIA_FRASEOLOGIA");

                    b.HasKey("Id");

                    b.HasIndex("PhraseologyCategoryId");

                    b.ToTable("FRASEOLOGIA_ASSUNTO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.PhraseologyTypeSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("PhraseologySubjectId")
                        .HasColumnName("ID_ASSUNTO_FRASEOLOGIA");

                    b.HasKey("Id");

                    b.HasIndex("PhraseologySubjectId");

                    b.ToTable("FRASEOLOGIA_TIPO_ASSUNTO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("FORNECEDOR");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<int?>("CategoryProductId")
                        .HasColumnName("ID_PRODUTO_CATEGORIA");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Ean")
                        .HasColumnName("EAN");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.Property<string>("Photo")
                        .HasColumnName("FOTO");

                    b.Property<int?>("ProducerId")
                        .HasColumnName("ID_FORNECEDOR");

                    b.Property<string>("Sku")
                        .HasColumnName("SKU");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProductId");

                    b.HasIndex("ProducerId");

                    b.ToTable("PRODUTO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.PunctuationRobotConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<int>("IdMechanicsRobotPunctuation")
                        .HasColumnName("ID_MECANISMO_ROBO_PONTOS");

                    b.Property<int>("IdRobotPunctuation")
                        .HasColumnName("ID_ROBO_PONTOS");

                    b.HasKey("Id");

                    b.ToTable("CONFIGURACAO_ROBO_PONTOS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.QuestionQuiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Image")
                        .HasColumnName("IMAGEM");

                    b.Property<int?>("QuestionQuizTypeId")
                        .HasColumnName("ID_TIPO_PERGUNTA_QUESTIONARIO");

                    b.Property<int?>("QuizId")
                        .HasColumnName("ID_QUESTIONARIO");

                    b.HasKey("Id");

                    b.HasIndex("QuestionQuizTypeId");

                    b.HasIndex("QuizId");

                    b.ToTable("QUESTIONARIO_PERGUNTA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.QuestionQuizType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("QUESTIONARIO_TIPO_PERGUNTA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVADO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Image")
                        .HasColumnName("IMAGEM");

                    b.Property<int>("MaxQuestionAmout")
                        .HasColumnName("NUMERO_MAXIMO_PERGUNTAS");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("QUESTIONARIO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.QuizRelated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int?>("OfficeId")
                        .HasColumnName("ID_CARGO");

                    b.Property<int?>("QuizId")
                        .HasColumnName("ID_QUIZ");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("QuizId");

                    b.ToTable("QUIZ_RELACIONADO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.QuizShopRelated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("QuizRelatedId")
                        .HasColumnName("ID_QUIZ_RELACIONADO");

                    b.Property<int?>("ShopId")
                        .HasColumnName("ID_LOJA");

                    b.HasKey("Id");

                    b.HasIndex("QuizRelatedId");

                    b.HasIndex("ShopId");

                    b.ToTable("QUIZ_LOJAS_RELACIONADA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Regional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Description")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("REGIONAL");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<int>("Amout")
                        .HasColumnName("QUANTIDADE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int>("CurrentMonth")
                        .HasColumnName("MES_VIGENTE");

                    b.Property<int>("CurrentYear")
                        .HasColumnName("ANO_VIGENTE");

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<bool>("Processed")
                        .HasColumnName("PROCESSADO");

                    b.Property<int?>("ProductId")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<decimal>("Punctuation")
                        .HasColumnName("PONTUACAO");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnName("DATA_VENDA");

                    b.Property<int?>("ShopId")
                        .HasColumnName("ID_LOJA");

                    b.Property<decimal>("TotalValue")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal>("UnitValue")
                        .HasColumnName("VALOR_UNIDADE");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopId");

                    b.HasIndex("UserId");

                    b.ToTable("VENDA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.SaleFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int>("CurrentMonth")
                        .HasColumnName("MES_VIGENTE");

                    b.Property<int>("CurrentYear")
                        .HasColumnName("ANO_VIGENTE");

                    b.Property<string>("FileName")
                        .HasColumnName("NOME_ARQUIVO");

                    b.Property<int?>("FileStatusId")
                        .HasColumnName("ID_STATUS_ARQUIVO");

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("FileStatusId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("UserId");

                    b.ToTable("ARQUIVO_VENDA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.SaleFileData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("Category")
                        .HasColumnName("CATEGORIA");

                    b.Property<string>("Cnpj")
                        .HasColumnName("CNPJ");

                    b.Property<string>("CpfSalesman")
                        .HasColumnName("CPF_VENDEDOR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("EanCode")
                        .HasColumnName("CODIGO_EAN");

                    b.Property<string>("NameSalesman")
                        .HasColumnName("NOME_VENDEDOR");

                    b.Property<int>("Product")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<string>("ProductDescription")
                        .HasColumnName("DESCRICAO_PRODUTO");

                    b.Property<string>("RequestNumber")
                        .HasColumnName("NUMERO_PEDIDO");

                    b.Property<string>("Resale")
                        .HasColumnName("REVENDA");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnName("DATA_VENDA");

                    b.Property<int?>("SaleFileId")
                        .HasColumnName("ID_ARQUIVO_VENDA");

                    b.Property<int?>("SaleFileSkuStatusId")
                        .HasColumnName("ID_ARQUIVO_VENDA_SKU_STATUS");

                    b.Property<string>("ShopCode")
                        .HasColumnName("CODIGO_LOJA");

                    b.HasKey("Id");

                    b.HasIndex("SaleFileId");

                    b.HasIndex("SaleFileSkuStatusId");

                    b.ToTable("ARQUIVO_VENDA_DADOS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.SaleFileDataError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int>("Line")
                        .HasColumnName("LINHA");

                    b.Property<int?>("SaleFileId")
                        .HasColumnName("ID_ARQUIVO_VENDA");

                    b.HasKey("Id");

                    b.HasIndex("SaleFileId");

                    b.ToTable("ARQUIVO_VENDA_DADOS_ERRO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.SaleFileSkuStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("ARQUIVO_VENDA_SKU_STATUS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Address")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Cep")
                        .HasColumnName("CEP");

                    b.Property<string>("City")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Cnpj")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Complement")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.Property<string>("Neighborhood")
                        .HasColumnName("BAIRRO");

                    b.Property<int?>("NetworkId")
                        .HasColumnName("ID_REDE");

                    b.Property<int>("Number")
                        .HasColumnName("NUMERO");

                    b.Property<string>("ShopCode")
                        .HasColumnName("CODIGO_LOJA");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.ToTable("LOJA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.ShopUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int?>("ShopId")
                        .HasColumnName("ID_LOJA");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("UserId");

                    b.ToTable("USUARIO_LOJA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.TrainingUserPoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<decimal>("Percentage")
                        .HasColumnName("PERCENTUAL");

                    b.Property<decimal>("Punctuation")
                        .HasColumnName("PONTO");

                    b.Property<int>("ResultId")
                        .HasColumnName("ID_RESULTADO");

                    b.Property<string>("TrainingDescription")
                        .HasColumnName("TREINAMENTO_DESCRICAO");

                    b.Property<DateTime>("TrainingDoneAt")
                        .HasColumnName("CONCLUIDO_EM");

                    b.Property<DateTime>("TrainingEndedAt")
                        .HasColumnName("DATA_LIMITE");

                    b.Property<int>("TrainingId")
                        .HasColumnName("ID_TREINAMENTO");

                    b.Property<DateTime>("TrainingStartedAt")
                        .HasColumnName("DATA_INICIO");

                    b.Property<string>("TrainingStatus")
                        .HasColumnName("TREINAMENTO_STATUS");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("USUARIO_PONTOS_TREINAMENTO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessCodeInvite")
                        .HasColumnName("CODIGO_ACESSO_CONVITE");

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Address")
                        .HasColumnName("ENDERECO");

                    b.Property<DateTime?>("BithDate")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("CEP")
                        .HasColumnName("CEP");

                    b.Property<string>("CellPhone")
                        .HasColumnName("CELULAR");

                    b.Property<string>("City")
                        .HasColumnName("CIDADE");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnName("ESTADO_CIVIL");

                    b.Property<string>("CommercialPhone")
                        .HasColumnName("TELEFONE_COMERCIAL");

                    b.Property<string>("Complement")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Cpf")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnName("GENERO");

                    b.Property<string>("HeartTeam")
                        .HasColumnName("TIME_CORACAO");

                    b.Property<string>("Name")
                        .HasColumnName("NOME");

                    b.Property<string>("Neighborhood")
                        .HasColumnName("BAIRRO");

                    b.Property<int>("Number")
                        .HasColumnName("NUMERO");

                    b.Property<DateTime?>("OffIn")
                        .HasColumnName("DESLIGADO_EM");

                    b.Property<int?>("OfficeId")
                        .HasColumnName("ID_CARGO");

                    b.Property<string>("Password")
                        .HasColumnName("SENHA");

                    b.Property<DateTime?>("PasswordRecoveredAt")
                        .HasColumnName("RECUPERADO_SENHA_EM");

                    b.Property<string>("Phone")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Photo")
                        .HasColumnName("FOTO");

                    b.Property<bool>("PrivacyPolicy")
                        .HasColumnName("POLITICA_PRIVACIDADE");

                    b.Property<string>("ReferencePoint")
                        .HasColumnName("PONTO_REFERENCIA");

                    b.Property<int>("SonAmout")
                        .HasColumnName("QUANTIDADE_FILHOS");

                    b.Property<string>("Uf")
                        .HasColumnName("UF");

                    b.Property<int?>("UserStatusId")
                        .HasColumnName("ID_USUARIO_STATUS");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("UserStatusId");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessCodeConfirmation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("USUARIO_CODIGO_CONFIRMACAO_ACESSO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessCodeExpiration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("USUARIO_CODIGO_EXPIRACAO_ACESSO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessCodeInvite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("ATUALIZADO_EM");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("USUARIO_CODIGO_CONVITE_ACESSO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Device")
                        .HasColumnName("DISPOSITIVO");

                    b.Property<string>("Ip")
                        .HasColumnName("IP");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("USUARIO_ACESSO_LOG");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserPunctuation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<int>("CurrentMonth")
                        .HasColumnName("MES_VIGENTE");

                    b.Property<int>("CurrentYear")
                        .HasColumnName("ANO_VIGENTE");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnName("TIPO_OPERACAO");

                    b.Property<decimal>("Punctuation")
                        .HasColumnName("PONTUACAO");

                    b.Property<int>("ReferenceEntityId")
                        .HasColumnName("ID_ENTIDADE_REFERENTE");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int?>("UserPunctuationSourceId")
                        .HasColumnName("ID_ORIGEM_PONTUACAO");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserPunctuationSourceId");

                    b.ToTable("PONTUACAO_USUARIO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserPunctuationReserved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<long>("ExternalOrderId")
                        .HasColumnName("ID_PEDIDO_EXTERNO");

                    b.Property<int?>("OrderId")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<decimal>("Punctuation")
                        .HasColumnName("PONTUACAO");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("PONTUACAO_USUARIO_RESERVADA");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserPunctuationSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("PunctuationRobotConfigurationId")
                        .HasColumnName("ID_CONFIGURACAO_ROBO_PONTOS");

                    b.HasKey("Id");

                    b.HasIndex("PunctuationRobotConfigurationId");

                    b.ToTable("ORIGEM_PONTUACAO_USUARIO");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activated")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.HasKey("Id");

                    b.ToTable("USUARIO_STATUS");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CRIADO_EM");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO");

                    b.Property<int?>("UserId")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int?>("UserStatusFromId")
                        .HasColumnName("DE_ID_USUARIO_STATUS");

                    b.Property<int?>("UserStatusToId")
                        .HasColumnName("PARA_ID_USUARIO_STATUS");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserStatusFromId");

                    b.HasIndex("UserStatusToId");

                    b.ToTable("USUARIO_STATUS_LOG");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.AnswerQuiz", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.QuestionQuiz", "QuestionQuiz")
                        .WithMany()
                        .HasForeignKey("QuestionQuizId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.AnswerUserQuiz", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.AnswerQuiz", "AnswerQuiz")
                        .WithMany()
                        .HasForeignKey("AnswerQuizId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.CampaignRelated", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.CampaignShopRelated", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.CampaignRelated", "CampaignRelated")
                        .WithMany()
                        .HasForeignKey("CampaignRelatedId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.FocusProduct", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.GroupProduct", "GroupProduct")
                        .WithMany()
                        .HasForeignKey("GroupProductId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.HierarchyFile", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.FileStatus", "FileStatus")
                        .WithMany()
                        .HasForeignKey("FileStatusId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.HierarchyFileData", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.HierarchyFile", "HierarchyFile")
                        .WithMany()
                        .HasForeignKey("HierarchyFileId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.HierarchyFileDataError", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.HierarchyFile", "HierarchyFile")
                        .WithMany()
                        .HasForeignKey("HierarchyFileId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Network", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Regional", "Regional")
                        .WithMany()
                        .HasForeignKey("RegionalId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.NewsRelated", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Occurrence", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.OccurrenceContactType", "OccurrenceContactType")
                        .WithMany()
                        .HasForeignKey("OccurrenceContactTypeId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.OccurrenceStatus", "OccurrenceStatus")
                        .WithMany()
                        .HasForeignKey("OccurrenceStatusId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.OccurrenceSubject", "OccurrenceSubject")
                        .WithMany()
                        .HasForeignKey("OccurrenceSubjectId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OccurrenceMessage", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Occurrence", "Occurrence")
                        .WithMany()
                        .HasForeignKey("OccurrenceId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.OccurrenceMessageType", "OccurrenceMessageType")
                        .WithMany()
                        .HasForeignKey("OccurrenceMessageTypeId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Order", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderConfirm", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderReversal", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.OrderReversalItem", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.ParticipantProduct", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Phraseology", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.PhraseologyTypeSubject", "PhraseologyTypeSubject")
                        .WithMany()
                        .HasForeignKey("PhraseologyTypeSubjectId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.PhraseologySubject", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.PhraseologyCategory", "PhraseologyCategory")
                        .WithMany()
                        .HasForeignKey("PhraseologyCategoryId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.PhraseologyTypeSubject", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.PhraseologySubject", "PhraseologySubject")
                        .WithMany()
                        .HasForeignKey("PhraseologySubjectId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Product", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.CategoryProduct", "CategoryProduct")
                        .WithMany()
                        .HasForeignKey("CategoryProductId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Producer", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.QuestionQuiz", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.QuestionQuizType", "QuestionQuizType")
                        .WithMany()
                        .HasForeignKey("QuestionQuizTypeId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.QuizRelated", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.QuizShopRelated", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.QuizRelated", "QuizRelated")
                        .WithMany()
                        .HasForeignKey("QuizRelatedId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Sale", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.SaleFile", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.FileStatus", "FileStatus")
                        .WithMany()
                        .HasForeignKey("FileStatusId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.SaleFileData", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.SaleFile", "SaleFile")
                        .WithMany()
                        .HasForeignKey("SaleFileId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.SaleFileSkuStatus", "SaleFileSkuStatus")
                        .WithMany()
                        .HasForeignKey("SaleFileSkuStatusId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.SaleFileDataError", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.SaleFile", "SaleFile")
                        .WithMany()
                        .HasForeignKey("SaleFileId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.Shop", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Network", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.ShopUser", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.TrainingUserPoints", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.User", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.UserStatus", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessCodeConfirmation", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessCodeExpiration", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessCodeInvite", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserAccessLog", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserPunctuation", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.UserPunctuationSource", "UserPunctuationSource")
                        .WithMany()
                        .HasForeignKey("UserPunctuationSourceId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserPunctuationReserved", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserPunctuationSource", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.PunctuationRobotConfiguration", "PunctuationRobotConfiguration")
                        .WithMany()
                        .HasForeignKey("PunctuationRobotConfigurationId");
                });

            modelBuilder.Entity("Whp.MaisTop.Domain.Entities.UserStatusLog", b =>
                {
                    b.HasOne("Whp.MaisTop.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.UserStatus", "UserStatusFrom")
                        .WithMany()
                        .HasForeignKey("UserStatusFromId");

                    b.HasOne("Whp.MaisTop.Domain.Entities.UserStatus", "UserStatusTo")
                        .WithMany()
                        .HasForeignKey("UserStatusToId");
                });
#pragma warning restore 612, 618
        }
    }
}
